CLASS zcl_mwscan_icf_serv DEFINITION PUBLIC.
* Auto generated by https://github.com/abap-openapi/abap-openapi
* Title: SAP Malware Scanning Service
* Description: Use SAP Malware Scanning service to scan business documents for malware.
* Version: 1.0
  PUBLIC SECTION.
    INTERFACES if_http_extension.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_mwscan_icf_serv IMPLEMENTATION.
  METHOD if_http_extension~handle_request.
    DATA li_handler TYPE REF TO zif_mwscan_interface.
    DATA lv_method  TYPE string.
    DATA lv_path    TYPE string.

    CREATE OBJECT li_handler TYPE zcl_mwscan_icf_impl.
    lv_path = server->request->get_header_field( '~path' ).
    lv_method = server->request->get_method( ).

    TRY.
        IF lv_path = '/scan' AND lv_method = 'POST'.
          DATA r_scans_a_file_for_malware_ TYPE zif_mwscan_interface=>r_scans_a_file_for_malware_.
          r_scans_a_file_for_malware_ = li_handler->scans_a_file_for_malware_( ).
          IF r_scans_a_file_for_malware_-_200_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_200_app_json ) ).
            server->response->set_status( code = 200 reason = 'OK - Scan complete.' ).
            RETURN.
          ENDIF.
          IF r_scans_a_file_for_malware_-_401_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_401_app_json ) ).
            server->response->set_status( code = 401 reason = 'Unauthorized - Access denied. Your authentication credentials have been refused.' ).
            RETURN.
          ENDIF.
          IF r_scans_a_file_for_malware_-_413_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_413_app_json ) ).
            server->response->set_status( code = 413 reason = 'Payload too large - The file is too large and cannot be scanned or the archive structure is too complex.' ).
            RETURN.
          ENDIF.
          IF r_scans_a_file_for_malware_-_415_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_415_app_json ) ).
            server->response->set_status( code = 415 reason = 'Unsupported media type - The scanner only accepts plain binary file content as HTTP body and not as form data.' ).
            RETURN.
          ENDIF.
          IF r_scans_a_file_for_malware_-_429_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_429_app_json ) ).
            server->response->set_status( code = 429 reason = 'Too many requests - Too many requests from this subaccount.' ).
            RETURN.
          ENDIF.
          IF r_scans_a_file_for_malware_-_503_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_scans_a_file_for_malware_-_503_app_json ) ).
            server->response->set_status( code = 503 reason = 'Service unavailable - The scanner is busy.' ).
            RETURN.
          ENDIF.
        ENDIF.
      CATCH cx_static_check.
        server->response->set_content_type( 'text/plain' ).
        server->response->set_cdata( 'exception' ).
        server->response->set_status( code = 500 reason = 'Error' ).
    ENDTRY.
    TRY.
        IF lv_path = '/info' AND lv_method = 'GET'.
          DATA r_returns_information_about_th TYPE zif_mwscan_interface=>r_returns_information_about_th.
          r_returns_information_about_th = li_handler->returns_information_about_th( ).
          IF r_returns_information_about_th-_200_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_returns_information_about_th-_200_app_json ) ).
            server->response->set_status( code = 200 reason = 'OK - The API returned consumer relevant information about the service instance.' ).
            RETURN.
          ENDIF.
          IF r_returns_information_about_th-_401_app_json IS NOT INITIAL.
            server->response->set_content_type( 'application/json' ).
            server->response->set_cdata( /ui2/cl_json=>serialize( r_returns_information_about_th-_401_app_json ) ).
            server->response->set_status( code = 401 reason = 'Unauthorized - Access denied. Your authentication credentials have been refused.' ).
            RETURN.
          ENDIF.
        ENDIF.
      CATCH cx_static_check.
        server->response->set_content_type( 'text/plain' ).
        server->response->set_cdata( 'exception' ).
        server->response->set_status( code = 500 reason = 'Error' ).
    ENDTRY.

    server->response->set_content_type( 'text/plain' ).
    server->response->set_cdata( 'no handler found' ).
    server->response->set_status( code = 500 reason = 'Error' ).
  ENDMETHOD.
ENDCLASS.